import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import glob

#buscar arquivos dentro de uma pasta.
arquivos = glob.glob('content/sales_*.csv')


# pegando todos os arquivos CSV que seguem o padrão Sales_*.csv dentro da pasta /content/, 
#lendo cada um deles com o pandas, guardando numa lista e depois juntando tudo em um único DataFrame.
lista_df = []
arquivos = glob.glob('/content/Sales_*.csv')

for arquivo in arquivos:
     df_mes = pd.read_csv(arquivo)
     lista_df.append(df_mes)

df_total = pd.concat(lista_df, ignore_index=True)
print(df_total.head())

#tratando a coluna de datas e criando uma coluna nova com o mês.
df_total['Order Date'] = pd.to_datetime(df_total['Order Date'], dayfirst=True, errors='coerce')
df_total['Month'] = df_total['Order Date'].dt.month




# criando mais uma coluna, mas dessa vez com o nome do mês por extenso, em vez do número.
df_total['Month_Name'] = df_total['Order Date'].dt.month_name()

# renomeando as colunas
df_total.rename(columns={
    'Order ID': 'ID do Pedido',
    'Product': 'Produto',
    'Quantity Ordered': 'Quantidade',
    'Price Each': 'Preço Unitário',
    'Order Date': 'Data do Pedido',
    'Purchase Address': 'Endereço de Compra',
    'Month': 'Mês',
    'Month_Name': 'Mês_nome'
}, inplace=True)

#visualizando a tabela
df_total.head(5)

import locale


#contando quantas linhas (pedidos/registros) existem em cada mês:
df_total['Mês_nome'].value_counts()



# Supondo que a coluna se chame 'Endereço de Compra'
df_total['Cidade'] = df_total['Endereço de Compra'].str.split(',').str[1].str.strip()


df_total.head(5)

#apagando coulnas
df_total.drop(columns=['Endereço de Compra'], inplace=True)


df_total.drop(columns=['Data do Pedido'], inplace=True)

df_total.drop(columns=['Mês'], inplace=True)

 #top 10 produtos que mais renderam
df_total['Quantidade'] = pd.to_numeric(df_total['Quantidade'], errors='coerce')
df_total['Preço Unitário'] = pd.to_numeric(df_total['Preço Unitário'], errors='coerce')

df_total['Faturamento'] = df_total['Quantidade'] * df_total['Preço Unitário']

produtos_top = (
    df_total.groupby('Produto')['Faturamento']
    .sum()
    .sort_values(ascending=False)
    .reset_index()
)

print(produtos_top.head(10))  # top 10 produtos que mais renderam
produtos_redimentos = produtos_top


import seaborn as sns
import matplotlib.pyplot as plt

# Pega os 10 produtos mais rentáveis
top_10 = produtos_top.head(10)

plt.figure(figsize=(10, 6))
ax = sns.barplot(
    x='Produto',
    y='Faturamento',
    data=top_10,
    color='green'
)

# Adicionar os valores em cima das barras
for p in ax.patches:
    ax.annotate(
        f'R$ {p.get_height():,.2f}',   # formato com duas casas decimais
        (p.get_x() + p.get_width() / 2., p.get_height()),  # posição
        ha='center', va='bottom', fontsize=7, rotation=0
    )

plt.title('os dez Produtos Mais Vendidos')
plt.xlabel('Produto')
plt.ylabel('Faturamento (R$)')
plt.xticks(rotation=40, ha='right')
plt.tight_layout()
plt.show()


produtos_top.head().to_csv('produtos por faturamento.csv', index=False)

df_total.head(5)

df_mes_faturamento = df_total.groupby('Mês_nome')['Faturamento'].sum().reset_index()
df_mes_faturamento.head(13)

#faturamento por produto
produtos_top = ( df_total.groupby('Produto')['Faturamento'].sum().sort_values(ascending=False).reset_index())
produtos_top.head().to_csv('produtos por faturamento.csv', index=False)


# faturamento total
faturamento_total = df_total['Faturamento'].sum()
pd.Series({'Faturamento Total': faturamento_total}).to_csv('faturamento_total.csv', index=False)


# faturamanto por mes
df_mes_faturamento = df_total.groupby('Mês_nome')['Faturamento'].sum().reset_index()
df_mes_faturamento.head().to_csv('faturamento_por_mes.csv', index=False)

# faturamento por estado
df_faturamento_estado = df_total.groupby('Cidade')['Faturamento'].sum().reset_index().sort_values(by="Faturamento", ascending=False)
df_faturamento_estado.head().to_csv('faturamento_por_estado.csv', index=False)

#produtos mais vendido
df_produto_mais_vendido = df_total['Produto'].value_counts().head()
df_produto_mais_vendido.to_csv('produto_mais_vendido.csv')

#ticket medio faturamento/quantidade por mes
ticket_medio_por_mes = df_total.groupby('Mês_nome').apply(lambda x: x['Faturamento'].sum() / x['ID do Pedido'].nunique())
ticket_medio_por_mes.to_csv('ticket_medio_por_mes.csv',index=False)

#ticket medio faturamento/quantidade por cidade
ticket_medio_por_cidade = df_total.groupby('Cidade').apply(lambda x: x['Faturamento'].sum() / x['ID do Pedido'].nunique()).round(2)
ticket_medio_por_cidade.to_csv('ticket_medio_por_cidade.csv',index=False)

ticket_medio_por_cidade.head(10)

ticket_medio_por_mes.head(13)

